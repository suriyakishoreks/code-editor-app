{"version":3,"sources":["components/NavBar/NavBar.module.css","components/Iframe/Iframe.module.css","components/Editor/Editor.module.css","default.js","components/Editor/Editor.jsx","components/Iframe/Iframe.jsx","components/NavBar/NavBar.jsx","App.js","index.js"],"names":["module","exports","defaultValue","Editor","props","className","classes","editordiv","mode","theme","onChange","newValue","name","editorProps","$blockScrolling","height","width","fontSize","showPrintMargin","setOptions","useWorker","Iframe","srcDoc","iframediv","iframe","title","sandbox","NavBar","themeHandler","onSubmit","useState","checked","setChecked","navColor","setNavColor","useEffect","navbar","style","backgroundColor","label","htmlFor","Switch","event","target","color","inputProps","paddingRight","Button","variant","onClick","App","editorText","setEditorText","setSrcDoc","setTheme","state","val","ReactDOM","render","document","getElementById"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,wB,mBCA1DD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,OAAS,yB,mBCAjED,EAAOC,QAAU,CAAC,UAAY,4B,yHCDjBC,EAAY,6a,4CCWV,SAASC,EAAQC,GAM5B,OACA,qBAAKC,UAAWC,IAAQC,UAAxB,SACA,cAAC,IAAD,CACIC,KAAK,OACLC,MAAOL,EAAMK,MACbC,SATJ,SAAkBC,GACdP,EAAMM,SAASC,IASfC,KAAK,SACLC,YAAa,CAAEC,iBAAiB,GAChCC,OAAO,OACPC,MAAM,OACNC,SAAU,GACVC,iBAAiB,EACjBhB,aAAcA,EACdiB,WAAY,CAACC,UAAW,O,qBC3BjB,SAASC,EAAT,GAA4B,IAAVC,EAAS,EAATA,OAE7B,OACI,qBAAKjB,UAAWC,IAAQiB,UAAxB,SACA,wBACAlB,UAAWC,IAAQkB,OACnBC,MAAM,gBACNC,QAAQ,gBACRJ,OAAQA,M,qCCLD,SAASK,EAAT,GAA6C,IAA3BC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,SAC3C,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,mBAAS,WAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAcA,OATAC,qBAAU,WACNP,EAAaG,GAETG,GADY,IAAZH,EACY,UAEA,aAEjB,CAACA,IAGA,sBAAK1B,UAAWC,IAAQ8B,OAAQC,MAAO,CAAEC,gBAAiBL,GAA1D,UACI,uBAAO5B,UAAWC,IAAQiC,MAAOC,QAAQ,cAAzC,qBACA,cAACC,EAAA,EAAD,CACIV,QAASA,EACTrB,SAlBS,SAACgC,GAClBV,EAAWU,EAAMC,OAAOZ,UAkBhBa,MAAM,UACNhC,KAAK,cACLiC,WAAY,CAAE,aAAc,sBAEhC,uBAAOxC,UAAWC,IAAQiC,MAAOF,MAAO,CAACS,aAAa,OAAQN,QAAQ,cAAtE,oBAEA,cAACO,EAAA,EAAD,CAAQC,QAAQ,YAAYJ,MAAM,UAAUK,QAASpB,EAArD,yBCQGqB,MAnCf,WACE,MAAoCpB,mBAAS,IAA7C,mBAAOqB,EAAP,KAAmBC,EAAnB,KACA,EAA4BtB,mBAAS,IAArC,mBAAOR,EAAP,KAAe+B,EAAf,KACA,EAA0BvB,mBAAS,YAAnC,mBAAOrB,EAAP,KAAc6C,EAAd,KAuBA,OArBAnB,qBAAU,WACRkB,EAAUnD,GACVkD,EAAclD,KACd,IAmBA,eAAC,WAAD,WACE,cAACyB,EAAD,CAAQC,aAdZ,SAAsB2B,GAElBD,GADY,IAAVC,EACO,WAGA,WAS2B1B,SANxC,WACEwB,EAAUF,MAMR,cAAChD,EAAD,CAAQO,SAnBZ,SAAyB8C,GACvBJ,EAAcI,IAkByB/C,MAAOA,IAC5C,cAACY,EAAD,CAAQC,OAAUA,QC/BxBmC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.54f368c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__3TNVY\",\"label\":\"NavBar_label__2REua\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iframediv\":\"Iframe_iframediv__3hvnJ\",\"iframe\":\"Iframe_iframe__3eEhE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editordiv\":\"Editor_editordiv__3fZJ0\"};","export const defaultValue =\r\n    `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n<title>Code Editor</title>\r\n<style type=\"text/css\" media=\"screen\">\r\n\r\n    div {\r\n    text-align: center;\r\n    }\r\n    h1 {\r\n        color: red;\r\n    }\r\n\r\n</style>\r\n</head>\r\n<body>\r\n\r\n<div>\r\n<h1>Welcome to Code Editor</h1>\r\n<h3>You can code css under style tag and javascript under script tag</h3>\r\n</div>\r\n\r\n<script type=\"application/javascript\">\r\n    \r\n</script>\r\n</body>\r\n</html>\r\n`;","import React from 'react';\r\nimport AceEditor from \"react-ace\";\r\nimport {defaultValue} from '../../default';\r\n\r\nimport \"ace-builds/src-noconflict/mode-html\";\r\nimport \"ace-builds/src-noconflict/theme-twilight\";\r\nimport \"ace-builds/src-noconflict/theme-chrome\";\r\n\r\nimport classes from './Editor.module.css';\r\n\r\n\r\nexport default function Editor (props) {\r\n\r\n    function onChange(newValue) {\r\n        props.onChange(newValue);\r\n      }\r\n\r\n    return (\r\n    <div className={classes.editordiv}>\r\n    <AceEditor\r\n        mode=\"html\"\r\n        theme={props.theme}\r\n        onChange={onChange}\r\n        name=\"EDITOR\"\r\n        editorProps={{ $blockScrolling: false }}\r\n        height=\"100%\"\r\n        width=\"100%\"\r\n        fontSize={15}\r\n        showPrintMargin={false}\r\n        defaultValue={defaultValue}\r\n        setOptions={{useWorker: 0}}\r\n      />\r\n      </div>);\r\n}\r\n","import React from 'react';\r\nimport classes from './Iframe.module.css';\r\n\r\nexport default function Iframe ({srcDoc}) {\r\n\r\n    return (\r\n        <div className={classes.iframediv} >\r\n        <iframe \r\n        className={classes.iframe}\r\n        title=\"EDITOR_OUTPUT\" \r\n        sandbox=\"allow-scripts\" \r\n        srcDoc={srcDoc}\r\n        />\r\n      </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport classes from './NavBar.module.css';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nexport default function NavBar({ themeHandler, onSubmit }) {\r\n    const [checked, setChecked] = useState(true);\r\n    const [navColor, setNavColor] = useState(\"#161515\");\r\n    const handleChange = (event) => {\r\n        setChecked(event.target.checked);\r\n    };\r\n\r\n    useEffect(() => {\r\n        themeHandler(checked);\r\n        if (checked === true)\r\n            setNavColor(\"#161515\");\r\n        else\r\n            setNavColor(\"#707070\");\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [checked]);\r\n\r\n    return (\r\n        <div className={classes.navbar} style={{ backgroundColor: navColor }}>\r\n            <label className={classes.label} htmlFor=\"lightordark\"> Light </label>\r\n            <Switch\r\n                checked={checked}\r\n                onChange={handleChange}\r\n                color=\"primary\"\r\n                name=\"lightordark\"\r\n                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n            />\r\n            <label className={classes.label} style={{paddingRight:\"2vw\"}} htmlFor=\"lightordark\"> Dark </label>\r\n\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n                Run Code\r\n            </Button>\r\n        </div>\r\n    );\r\n}","import React, {Fragment,useState ,useEffect} from 'react';\nimport Editor from './components/Editor/Editor';\nimport Iframe from './components/Iframe/Iframe';\nimport NavBar from './components/NavBar/NavBar';\n\nimport {defaultValue} from './default';\n\nfunction App() {\n  const [editorText, setEditorText] = useState(\"\");\n  const [srcDoc, setSrcDoc] = useState(\"\");\n  const [theme, setTheme] = useState(\"twilight\");\n\n  useEffect(()=> {\n    setSrcDoc(defaultValue);\n    setEditorText(defaultValue);\n  },[]);\n\n  function onChangeHandler(val) {\n    setEditorText(val);\n  }\n\n  function themeHandler(state) {\n    if (state === true) {\n      setTheme(\"twilight\");\n    }\n    else\n      setTheme(\"chrome\");\n  }\n\n  function submitHandler() {\n    setSrcDoc(editorText);\n  }\n\n  return (\n    <Fragment >\n      <NavBar themeHandler={themeHandler} onSubmit={submitHandler}/>\n      <Editor onChange = {onChangeHandler} theme={theme} />\n      <Iframe srcDoc = {srcDoc} />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}